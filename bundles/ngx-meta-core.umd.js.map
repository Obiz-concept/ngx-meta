{"version":3,"file":"ngx-meta-core.umd.js","sources":["../../../../packages/@ngx-meta/core/src/models/page-title-positioning.ts","../../../../packages/@ngx-meta/core/src/meta.loader.ts","../../../../packages/@ngx-meta/core/src/util.ts","../../../../packages/@ngx-meta/core/src/meta.service.ts","../../../../packages/@ngx-meta/core/src/meta.guard.ts","../../../../packages/@ngx-meta/core/src/meta.module.ts"],"sourcesContent":["export enum PageTitlePositioning {\n  /**\n   * append page title after application name\n   */\n  AppendPageTitle = 0,\n  /**\n   * prepend page title before application name\n   */\n  PrependPageTitle = 10\n}\n","import { MetaSettings } from './models/meta-settings';\nimport { PageTitlePositioning } from './models/page-title-positioning';\n\nexport abstract class MetaLoader {\n  abstract get settings(): MetaSettings;\n}\n\nexport class MetaStaticLoader implements MetaLoader {\n  get settings(): MetaSettings {\n    return this.providedSettings;\n  }\n\n  constructor(\n    private readonly providedSettings: MetaSettings = {\n      pageTitlePositioning: PageTitlePositioning.PrependPageTitle,\n      defaults: {}\n    }\n  ) {}\n}\n","import { Observable } from 'rxjs';\n\nexport const isPromise = (obj: any): obj is Promise<any> => !!obj && typeof obj.then === 'function';\n\nexport const isObservable = (obj: any | Observable<any>): obj is Observable<any> => !!obj && typeof obj.subscribe === 'function';\n","import { Injectable } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { from as observableFrom, Observable, of as observableOf } from 'rxjs';\n\nimport { MetaLoader } from './meta.loader';\nimport { MetaSettings } from './models/meta-settings';\nimport { PageTitlePositioning } from './models/page-title-positioning';\nimport { isObservable, isPromise } from './util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetaService {\n  protected readonly settings: MetaSettings;\n  private readonly isMetaTagSet: any;\n\n  constructor(readonly loader: MetaLoader, private readonly title: Title, private readonly meta: Meta) {\n    this.settings = loader.settings;\n    this.isMetaTagSet = {};\n  }\n\n  setTitle(title: string, override = false): void {\n    const title$ = title ? this.callback(title) : observableOf('');\n\n    title$.subscribe((res: string) => {\n      let fullTitle = '';\n\n      if (!res) {\n        const defaultTitle$ =\n          this.settings.defaults && this.settings.defaults.title ? this.callback(this.settings.defaults.title) : observableOf('');\n\n        defaultTitle$.subscribe((defaultTitle: string) => {\n          if (!override && this.settings.pageTitleSeparator && this.settings.applicationName) {\n            this.callback(this.settings.applicationName).subscribe((applicationName: string) => {\n              fullTitle = applicationName ? this.getTitleWithPositioning(defaultTitle, applicationName) : defaultTitle;\n              this.updateTitle(fullTitle);\n            });\n          } else {\n            this.updateTitle(defaultTitle);\n          }\n        });\n      } else if (!override && this.settings.pageTitleSeparator && this.settings.applicationName) {\n        this.callback(this.settings.applicationName).subscribe((applicationName: string) => {\n          fullTitle = applicationName ? this.getTitleWithPositioning(res, applicationName) : res;\n          this.updateTitle(fullTitle);\n        });\n      } else {\n        this.updateTitle(res);\n      }\n    });\n  }\n\n  setTag(key: string, value: string): void {\n    if (key === 'title') {\n      throw new Error(\n        `Attempt to set ${key} through \"setTag\": \"title\" is a reserved tag name. ` + 'Please use `MetaService.setTitle` instead.'\n      );\n    }\n\n    const cur = value || (this.settings.defaults && this.settings.defaults[key] ? this.settings.defaults[key] : '');\n\n    const value$ = key !== 'og:locale' && key !== 'og:locale:alternate' ? this.callback(cur) : observableOf(cur);\n\n    value$.subscribe((res: string) => {\n      this.updateTag(key, res);\n    });\n  }\n\n  update(currentUrl: string, metaSettings?: any): void {\n    if (!metaSettings) {\n      const fallbackTitle = this.settings.defaults\n        ? this.settings.defaults.title || this.settings.applicationName\n        : this.settings.applicationName;\n\n      this.setTitle(fallbackTitle, true);\n    } else {\n      if (metaSettings.disabled) {\n        this.update(currentUrl);\n\n        return;\n      }\n\n      this.setTitle(metaSettings.title, metaSettings.override);\n\n      Object.keys(metaSettings).forEach(key => {\n        let value = metaSettings[key];\n\n        if (key === 'title' || key === 'override') {\n          return;\n        } else if (key === 'og:locale') {\n          value = value.replace(/-/g, '_');\n        } else if (key === 'og:locale:alternate') {\n          const currentLocale = metaSettings['og:locale'];\n          this.updateLocales(currentLocale, metaSettings[key]);\n\n          return;\n        }\n\n        this.setTag(key, value);\n      });\n    }\n\n    if (this.settings.defaults) {\n      Object.keys(this.settings.defaults).forEach(key => {\n        let value = this.settings.defaults[key];\n\n        if ((metaSettings && (key in this.isMetaTagSet || key in metaSettings)) || key === 'title' || key === 'override') {\n          return;\n        } else if (key === 'og:locale') {\n          value = value.replace(/-/g, '_');\n        } else if (key === 'og:locale:alternate') {\n          const currentLocale = metaSettings ? metaSettings['og:locale'] : undefined;\n          this.updateLocales(currentLocale, value);\n\n          return;\n        }\n\n        this.setTag(key, value);\n      });\n    }\n\n    const baseUrl = this.settings.applicationUrl ? this.settings.applicationUrl : '/';\n    const url = `${baseUrl}${currentUrl}`.replace(/(https?:\\/\\/)|(\\/)+/g, '$1$2').replace(/\\/$/g, '');\n\n    this.setTag('og:url', url ? url : '/');\n  }\n\n  removeTag(key: string): void {\n    this.meta.removeTag(key);\n  }\n\n  private callback(value: string): Observable<string> {\n    if (this.settings.callback) {\n      const value$ = this.settings.callback(value);\n\n      if (!isObservable(value$)) {\n        return isPromise(value$) ? observableFrom(value$) : observableOf(value$);\n      }\n\n      return value$;\n    }\n\n    return observableOf(value);\n  }\n\n  private getTitleWithPositioning(title: string, applicationName: string): string {\n    switch (this.settings.pageTitlePositioning) {\n      case PageTitlePositioning.AppendPageTitle:\n        return applicationName + String(this.settings.pageTitleSeparator) + title;\n      case PageTitlePositioning.PrependPageTitle:\n        return title + String(this.settings.pageTitleSeparator) + applicationName;\n      default:\n        throw new Error(`Invalid pageTitlePositioning specified [${this.settings.pageTitlePositioning}]!`);\n    }\n  }\n\n  private updateTitle(title: string): void {\n    this.title.setTitle(title);\n    this.meta.updateTag({\n      property: 'og:title',\n      content: title\n    });\n  }\n\n  private updateLocales(currentLocale: string, availableLocales: string): void {\n    const cur = currentLocale || (this.settings.defaults ? this.settings.defaults['og:locale'] : '');\n\n    if (cur && this.settings.defaults) {\n      this.settings.defaults['og:locale'] = cur.replace(/_/g, '-');\n    }\n\n    // TODO: set HTML lang attribute - https://github.com/ngx-meta/core/issues/32\n    // const html = this.document.querySelector('html');\n    // html.setAttribute('lang', cur);\n\n    const elements = this.meta.getTags('property=\"og:locale:alternate\"');\n\n    elements.forEach((element: any) => {\n      this.meta.removeTagElement(element);\n    });\n\n    if (cur && availableLocales) {\n      availableLocales.split(',').forEach((locale: string) => {\n        if (cur.replace(/-/g, '_') !== locale.replace(/-/g, '_')) {\n          this.meta.addTag({\n            property: 'og:locale:alternate',\n            content: locale.replace(/-/g, '_')\n          });\n        }\n      });\n    }\n  }\n\n  private updateTag(key: string, value: string): void {\n    if (key.lastIndexOf('og:', 0) === 0) {\n      this.meta.updateTag({\n        property: key,\n        content: key === 'og:locale' ? value.replace(/-/g, '_') : value\n      });\n    } else {\n      this.meta.updateTag({\n        name: key,\n        content: value\n      });\n    }\n\n    this.isMetaTagSet[key] = true;\n\n    if (key === 'description') {\n      this.meta.updateTag({\n        property: 'og:description',\n        content: value\n      });\n    } else if (key === 'author') {\n      this.meta.updateTag({\n        property: 'og:author',\n        content: value\n      });\n    } else if (key === 'publisher') {\n      this.meta.updateTag({\n        property: 'og:publisher',\n        content: value\n      });\n    } else if (key === 'og:locale') {\n      const availableLocales = this.settings.defaults ? this.settings.defaults['og:locale:alternate'] : '';\n\n      this.updateLocales(value, availableLocales);\n      this.isMetaTagSet['og:locale:alternate'] = true;\n    } else if (key === 'og:locale:alternate') {\n      const currentLocale = this.meta.getTag('property=\"og:locale\"').content;\n\n      this.updateLocales(currentLocale, value);\n      this.isMetaTagSet['og:locale'] = true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot } from '@angular/router';\n\nimport { MetaService } from './meta.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetaGuard implements CanActivate, CanActivateChild {\n  constructor(private readonly meta: MetaService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const url = state.url;\n\n    const metaSettings = route.hasOwnProperty('data') ? route.data.meta : undefined;\n\n    this.meta.update(url, metaSettings);\n\n    return true;\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { MetaGuard } from './meta.guard';\nimport { MetaLoader, MetaStaticLoader } from './meta.loader';\nimport { MetaService } from './meta.service';\n\nexport const metaFactory = () => new MetaStaticLoader();\n\n@NgModule()\nexport class MetaModule {\n  static forRoot(\n    configuredProvider: any = {\n      provide: MetaLoader,\n      useFactory: metaFactory\n    }\n  ): ModuleWithProviders<MetaModule> {\n    return {\n      ngModule: MetaModule,\n      providers: [configuredProvider, MetaGuard, MetaService]\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule?: MetaModule) {\n    if (parentModule) {\n      throw new Error('MetaModule already loaded; import in root module only.');\n    }\n  }\n}\n"],"names":["PageTitlePositioning","observableOf","observableFrom","Injectable","Title","Meta","NgModule","Optional","SkipSelf"],"mappings":"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"}